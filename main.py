import os
import re
import time
from ftplib import FTP_TLS, FTP

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
FTPS_HOST = 'ftp.dlptest.com'
FTPS_PORT = 21
USERNAME = 'dlpuser'
PASSWORD = 'rNrKYTX9g7z3RgJRmxWuGHbeu'

REMOTE_DIR = '/'
LOCAL_DIR = r'C:\Test_FTPS'

Z_PREFIX = 'ABC01'  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è z –≤ –Ω–æ–≤–æ–º –∏–º–µ–Ω–∏

SLEEP_INTERVAL_SECONDS = 2 * 60  # 15 –º–∏–Ω—É—Ç

# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω—É–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
pattern = re.compile(r'^(\d+)_(\d{4})-(\d{2})-(\d{2})_(\d{2})_(\d{2})_(\d{2})\.wav$')

class Explicit_FTP_TLS(FTP_TLS):
    def ntransfercmd(self, cmd, rest=None):
        conn, size = FTP.ntransfercmd(self, cmd, rest)
        if self._prot_p:
            conn = self.context.wrap_socket(conn,
                                            server_hostname=self.host,
                                            session=self.sock.session)
        return conn, size

def connect_ftps():
    ftps = Explicit_FTP_TLS()
    ftps.connect(FTPS_HOST, FTPS_PORT)
    ftps.login(USERNAME, PASSWORD)
    ftps.prot_p()  # –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π —Ä–µ–∂–∏–º –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö
    return ftps

def list_remote_files(ftps):
    ftps.cwd(REMOTE_DIR)
    files = ftps.nlst()
    return [f for f in files if pattern.match(f)]  # —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —à–∞–±–ª–æ–Ω—É

def download_file(ftps, filename):
    local_path = os.path.join(LOCAL_DIR, filename)
    with open(local_path, 'wb') as f:
        ftps.retrbinary(f'RETR {filename}', f.write)
    remote_size = ftps.size(filename)  # –ø–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    return local_path, remote_size

def check_size(local_path, remote_size):
    try:
        local_size = os.path.getsize(local_path)
        if local_size == remote_size:
            print(f"‚úÖ –†–∞–∑–º–µ—Ä —Å–æ–≤–ø–∞–¥–∞–µ—Ç: {local_size} –±–∞–π—Ç")
            return True
        else:
            print(f"‚ùå –†–∞–∑–º–µ—Ä –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç: –ª–æ–∫–∞–ª—å–Ω–æ {local_size}, –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {remote_size}")
            return False
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞: {e}")
        return False

def rename_file(old_path):
    old_name = os.path.basename(old_path)
    m = pattern.match(old_name)
    if not m:
        print(f"‚ùå –ü—Ä–æ–ø—É—â–µ–Ω (–Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —à–∞–±–ª–æ–Ω–æ–º): {old_name}")
        return None
    num, yyyy, dd, mm, hh, mi, ss = m.groups()
    new_name = f"{Z_PREFIX}_{num}-{dd}_{mm}_{yyyy}-{hh}_{mi}_{ss}.wav"
    new_path = os.path.join(LOCAL_DIR, new_name)
    os.rename(old_path, new_path)
    print(f"üîÑ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω: {old_name} ‚Üí {new_name}")
    return new_name

def delete_remote_files(ftps, files):
    ftps.cwd(REMOTE_DIR)
    for f in files:
        try:
            ftps.delete(f)
            print(f"üóëÔ∏è –£–¥–∞–ª—ë–Ω —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {f}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {f}: {e}")

def main_loop():
    while True:
        print(f"\n[{time.strftime('%Y-%m-%d %H:%M:%S')}] üîÅ –ù–æ–≤—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏")

        try:
            ftps = connect_ftps()
            print("üîê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É FTPS —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            time.sleep(60)
            continue

        try:
            remote_files = list_remote_files(ftps)
            if not remote_files:
                print("üìÇ –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
            else:
                for file in remote_files:
                    print(f"‚¨áÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è: {file}")
                    local_path, remote_size = download_file(ftps, file)

                    if check_size(local_path, remote_size):
                        renamed = rename_file(local_path)
                        if renamed:
                            delete_remote_files(ftps, [file])
                    else:
                        print(f"‚ö†Ô∏è –§–∞–π–ª {file} –ø—Ä–æ–ø—É—â–µ–Ω –∏–∑-–∑–∞ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–∞–∑–º–µ—Ä–∞")
        finally:
            ftps.quit()
            print("üîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∑–∞–∫—Ä—ã—Ç–æ")

        print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ {SLEEP_INTERVAL_SECONDS // 60} –º–∏–Ω—É—Ç...\n")
        time.sleep(SLEEP_INTERVAL_SECONDS)

if __name__ == '__main__':
    if not os.path.exists(LOCAL_DIR):
        os.makedirs(LOCAL_DIR)
    main_loop()
